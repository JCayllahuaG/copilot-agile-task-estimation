name: Run When Labeled Issue Is Created

on:
  issues:
    types: [opened, labeled]

jobs:
  handle-labeled-issue:
    if: >
      github.event.action == 'opened' && 
      contains(github.event.issue.labels.*.name, 'from-jira')
    runs-on: ubuntu-latest
    steps:
      - name: Print Issue Info
        run: |
          echo "🎯 Issue Title: ${{ github.event.issue.title }}"
          echo "📝 Issue Body: ${{ github.event.issue.body }}"
          echo "🏷️ Labels: ${{ toJson(github.event.issue.labels) }}"
    
      - name: Query GitHub GraphQL for Issue ID and Assign Copilot
        env:
          GRAPHQL_SECRET: ${{ secrets.GRAPHQL_SECRET }}
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          OWNER=$(echo "${{ github.repository }}" | cut -d'/' -f1)
          REPO=$(echo "${{ github.repository }}" | cut -d'/' -f2)

          # Query to get the issue ID
          QUERY=$(cat <<EOF
          query {
            repository(owner: "$OWNER", name: "$REPO") {
              issue(number: $ISSUE_NUMBER) {
                id
                title
              }
            }
          }
          EOF
          )

          ESCAPED_QUERY=$(echo "$QUERY" | jq -Rs .)

          RESPONSE=$(curl -s -X POST https://api.github.com/graphql \
            -H "Authorization: bearer $GRAPHQL_SECRET" \
            -H "Content-Type: application/json" \
            -d "{\"query\": $ESCAPED_QUERY}")

          ISSUE_ID=$(echo "$RESPONSE" | jq -r '.data.repository.issue.id')
          echo "Issue ID: $ISSUE_ID"

          # Mutation to assign Copilot bot
          MUTATION=$(cat <<EOF
          mutation {
            replaceActorsForAssignable(
              input: {assignableId: "$ISSUE_ID", actorIds: ["BOT_kgDOC9w8XQ"]}
            ) {
              assignable {
                ... on Issue {
                  id
                  title
                  assignees(first: 10) {
                    nodes {
                      login
                    }
                  }
                }
              }
            }
          }
          EOF
          )

          ESCAPED_MUTATION=$(echo "$MUTATION" | jq -Rs .)

          ASSIGN_RESPONSE=$(curl -s -X POST https://api.github.com/graphql \
            -H "Authorization: bearer $GRAPHQL_SECRET" \
            -H "Content-Type: application/json" \
            -d "{\"query\": $ESCAPED_MUTATION}")

          echo "Assign Response: $ASSIGN_RESPONSE"
